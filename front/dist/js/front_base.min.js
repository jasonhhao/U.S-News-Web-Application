function FrontBase(){}function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}FrontBase.prototype.run=function(){this.listenAuthBoxHover(),this.handleNavStatus()},FrontBase.prototype.handleNavStatus=function(){var t=window.location.href,n=window.location.protocol+"//"+window.location.host,i=t.replace(n,"");$(".nav li").each(function(t,n){var e=$(n);if(e.children("a").attr("href")===i)return e.addClass("active"),!1})},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenSignupEvent(),t.listenImgCaptchaEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=$(".signin-btn"),n=$(".signup-btn"),e=$(".close-btn"),i=this;e.click(function(){i.hideEvent()}),t.click(function(){i.showEvent(),i.scrollWrapper.css({left:0})}),n.click(function(){i.showEvent(),i.scrollWrapper.css({left:-400})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var i=this,t=$(".signin-group"),o=t.find("input[name='telephone']"),a=t.find("input[name='password']"),r=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=o.val(),n=a.val(),e=r.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){i.hideEvent(),window.location.reload()}})})},Auth.prototype.listenSignupEvent=function(){var l=$(".signup-group");l.find(".submit-btn").click(function(t){t.preventDefault();var n=l.find("input[name='telephone']"),e=l.find("input[name='username']"),i=l.find("input[name='img_captcha']"),o=l.find("input[name='password1']"),a=l.find("input[name='password2']"),r=n.val(),s=e.val(),u=i.val(),c=o.val(),p=a.val();xfzajax.post({url:"/account/register/",data:{telephone:r,username:s,img_captcha:u,password1:c,password2:p},success:function(t){window.location.reload()}})})},$(function(){var t=new Auth,n=new FrontBase;t.run(),n.run()}),$(function(){template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),i=((new Date).getTime()-e)/1e3;if(i<60)return"Just now";if(60<=i&&i<3600)return minutes=parseInt(i/60),minutes+" minutes before";if(3600<=i&&i<86400)return hours=parseInt(i/60/60),hours+" hours before";if(86400<=i&&i<2592e3)return days=parseInt(i/60/60/24),days+" days before";var o=n.getFullYear(),a=n.getMonth();return n.getDay()+"/"+a+"/"+o+" "+n.getHours()+":"+n.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
