function Banner(){this.index=1,this.banner_width=798,this.banner_group=$("#banner-group"),this.left_arrow=$(".left-arrow"),this.right_arrow=$(".right-arrow"),this.banner_ul=$("#banner-ul"),this.li_list=this.banner_ul.children("li"),this.banner_count=this.li_list.length,this.page_control=$(".page-control")}function Index(){var n=this;n.page=2,n.category_id=0,n.loadBtn=$("#load-more-btn")}Banner.prototype.initBanner=function(){var n=this,t=n.li_list.eq(0).clone(),e=n.li_list.eq(n.banner_count-1).clone();n.banner_ul.append(t),n.banner_ul.prepend(e),this.banner_ul.css({width:n.banner_width*(n.banner_count+2),left:-n.banner_width})},Banner.prototype.init_page_control=function(){for(var n=this,t=0;t<n.banner_count;t++){var e=$("<li></li>");n.page_control.append(e),0===t&&e.addClass("active")}n.page_control.css({width:12*n.banner_count+16+16*(n.banner_count-1)})},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index>=n.banner_count+1?(n.banner_ul.css({left:-n.banner_width}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.animate=function(){var n=this;n.banner_ul.stop().animate({left:-798*n.index},500);var t=n.index;t=0===t?n.banner_count-1:t===n.banner_count+1?0:n.index-1,n.page_control.children("li").eq(t).addClass("active").siblings().removeClass("active")},Banner.prototype.toggle_arrow=function(n){var t=this;n?(t.left_arrow.show(),t.right_arrow.show()):(t.left_arrow.hide(),t.right_arrow.hide())},Banner.prototype.listen_banner_hover=function(){var n=this;this.banner_group.hover(function(){clearInterval(n.timer),n.toggle_arrow(!0)},function(){n.loop(),n.toggle_arrow(!1)})},Banner.prototype.listen_arrow_click=function(){var n=this;n.left_arrow.click(function(){0===n.index?(n.banner_ul.css({left:-n.banner_count*n.banner_width}),n.index=n.banner_count-1):n.index--,n.animate()}),n.right_arrow.click(function(){n.index===n.banner_count+1?(n.banner_ul.css({left:-n.banner_width}),n.index=2):n.index++,n.animate()})},Banner.prototype.listen_page_control=function(){var e=this;e.page_control.children("li").each(function(n,t){$(t).click(function(){e.index=n+1,e.animate()})})},Banner.prototype.run=function(){this.initBanner(),this.init_page_control(),this.loop(),this.listen_banner_hover(),this.listen_arrow_click(),this.listen_page_control()},Index.prototype.listenLoadMoreEvent=function(){var i=this,r=$("#load-more-btn");r.click(function(){xfzajax.get({url:"/news/list/",data:{p:i.page,category_id:i.category_id},success:function(n){if(200===n.code){var t=n.data;if(0<t.length){var e=template("news-item",{newses:t});$(".list-inner-group").append(e),i.page+=1}else r.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var o=this;$(".list-tab").children().click(function(){var r=$(this),a=r.attr("data-category");xfzajax.get({url:"/news/list/",data:{category_id:a,p:1},success:function(n){if(200===n.code){var t=n.data,e=template("news-item",{newses:t}),i=$(".list-inner-group");i.empty(),i.append(e),o.page=2,o.category_id=a,r.addClass("active").siblings().removeClass("active"),o.loadBtn.show()}}})})},Index.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategorySwitchEvent()},$(function(){var n=new Banner,t=new Index;n.run(),t.run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
